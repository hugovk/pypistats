name: Test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-18.04, ubuntu-16.04, macos-latest, windows-latest]
        include:
          # Include new variables for Codecov
          - { codecov-flag: GHA_Ubuntu_18, os: ubuntu-18.04 }
          - { codecov-flag: GHA_Ubuntu_16, os: ubuntu-16.04 }
          - { codecov-flag: GHA_macOS, os: macos-latest }
          - { codecov-flag: GHA_Windows, os: windows-latest }

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install -U "pip>=20.1"
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            ${{ matrix.os }}-${{ matrix.python-version }}-v2-${{
            hashFiles('**/setup.py') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-v2-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade wheel
          python -m pip install --upgrade tox

      - name: Tox tests
        shell: bash
        run: |
          tox -e py

      - name: Tox tests (pins)
        if: matrix.python-version == '3.8' && matrix.os == 'ubuntu-18.04'
        shell: bash
        run: |
          tox -e pins

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          flags: ${{ matrix.codecov-flag }}
          name: ${{ matrix.os }} Python ${{ matrix.python-version }}
